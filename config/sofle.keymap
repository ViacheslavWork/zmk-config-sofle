/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define GAME 4

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        thh: thh {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD_HOME_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "BASE";

            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |  BSPC |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |   U   |   I   |  O   |   P   |   \   |
            // | CAPS  |  A  |  S  |  D   |  F   |  G   |                   |  H   |   J   |   K   |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |        |  |       |  N   |   M   |   ,   |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | LGUI | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | LOCK  | DEL  |

            bindings = <
&kp GRAVE   &kp N1  &kp N2           &kp N3         &kp N4        &kp N5                             &kp N6         &kp N7        &kp N8         &kp N9            &kp N0    &kp BSPC
&kp TAB     &kp Q   &kp W            &kp E          &kp R         &kp T                              &kp Y          &kp U         &kp I          &kp O             &kp P     &kp BSLH
&kp ESCAPE  &kp A   &thh LEFT_ALT S  &thh LSHIFT D  &thh LCTRL F  &kp G                              &kp H          &thh RCTRL J  &thh RSHIFT K  &thh RIGHT_ALT L  &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X            &kp C          &kp V         &kp B    &none        &none        &kp N          &kp M         &kp COMMA      &kp DOT           &kp FSLH  &kp RSHFT
                    &kp LCTRL        &kp LALT       &kp LGUI      &kp DEL  &lt 1 RET    &lt 2 SPACE  &kp BACKSPACE  &mo 3         &kp MINUS      &kp EQUAL
            >;
        };

        lower_layer {
            label = "LOWER";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // | `~   |  F1  |  F2  |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |      |      |      |      |      |      |                   | F12  |   -   |   =   |   [  |   ]   |   \   |
            // |      |      |      |      |      |      |                   |      |   _   |   +   |   {  |   }   |   |   |
            // |      |      |      |      |      |      |        |  |       | HOME |       |       |      |  END  |       |
            //               |      |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6   &kp F7     &kp F8     &kp F9    &kp F10   &kp F11
&none    &none   &none   &none   &none   &none                     &none    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH
&none    &none   &none   &none   &none   &none                     &none    &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
&none    &none   &none   &none   &none   &none   &trans    &trans  &kp END  &none      &none      &none     &none     &trans
                 &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans     &trans     &trans
            >;
        };

        raise_layer {
            label = "RAISE";

            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |      |      |      |       |       |      |                | PGUP |      |   ^   |      |       |       |
            // |      |      |      |       |       | CAPS |                | PGDN |   <- |   v   |  ->  |       |       |
            // |      | UNDO | CUT  | COPY  | PASTE |      |      |  |      | HOME |      |       |      | END   |       |
            //               |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4                    &trans     &trans    &trans    &trans     &trans  &trans
&trans      &trans        &trans        &trans        &trans         &trans                          &kp PG_UP  &kp HOME  &kp UP    &kp END    &trans  &trans
&to 0       &trans        &kp LC(LEFT)  &trans        &kp RC(RIGHT)  &none                           &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans      &none         &none         &none         &none          &kp HOME      &none     &trans  &kp END    &trans    &trans    &trans     &none   &none
                          &trans        &trans        &trans         &trans        &trans    &trans  &trans     &trans    &trans    &trans
            >;
        };

        Workspace_layer {
            label = "Workspace";
            bindings = <
&out OUT_TOG       &out OUT_BLE  &out OUT_USB  &none  &none  &none                   &none  &none                &none                &none                &none  &none
&ext_power EP_TOG  &none         &none         &none  &none  &none                   &none  &kp RG(KP_NUMBER_7)  &kp RG(KP_NUMBER_8)  &kp RG(KP_NUMBER_9)  &none  &none
&none              &none         &none         &none  &none  &tog 0                  &none  &kp RG(KP_NUMBER_4)  &kp RG(KP_NUMBER_5)  &kp RG(KP_NUMBER_6)  &none  &none
&none              &none         &none         &none  &none  &none   &none    &none  &none  &kp RG(KP_NUMBER_1)  &kp RG(KP_NUMBER_2)  &kp RG(KP_NUMBER_3)  &none  &none
                                 &none         &none  &none  &none   &none    &none  &none  &none                &none                &none
            >;
        };
    };
};
